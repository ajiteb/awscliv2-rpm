#!/bin/bash
set -euo pipefail

# important settings
name=awscliv2
version=$(cat aws-cli.version)
release=1
distro=$1
arch=x86_64
vrsn=$(tr -dc '[:digit:]' <aws-cli.version)
changelog_url="https://github.com/aws/aws-cli/blob/v2/CHANGELOG.rst#${vrsn}"

# escaping variables in templates
HOME='$HOME'

# print the file name so it can be fed to "git add"
respec() {
    cat >"$1"
    echo "$1"
}

respec ${name}-rpm-details.txt <<EOF
aws-cli version: ${version}
${name} release: ${release}

${changelog_url}
EOF

respec ${name}-rpm.release <<EOF
${release}
EOF

respec ${name}-rpm.distro <<EOF
${distro}
EOF

respec rebuildit <<EOF
#!/bin/bash
set -euo pipefail

sha256sum -c awscli-exe-linux-${arch}.zip.sha256

echo "Installing AWS CLI v2 into staging directory..."
"./aws/install" --install-dir "$PKG_ROOT$FINAL_INSTALL_DIR" --bin-dir "$PKG_ROOT$FINAL_BIN_DIR" --update

echo "Fixing symlink for the aws binary..."
rm -f "$PKG_ROOT$FINAL_BIN_DIR/aws"
ln -s "$FINAL_INSTALL_DIR/v2/current/bin/aws" "$PKG_ROOT$FINAL_BIN_DIR/aws"
rm -f "$PKG_ROOT$FINAL_BIN_DIR/aws_completer"
ln -s "$FINAL_INSTALL_DIR/v2/current/bin/aws_completer" "$PKG_ROOT$FINAL_BIN_DIR/aws_completer"

if [ -L "$AWS_V2_DIR/current" ]; then
    echo "Fixing /usr/aws-cli/v2/current symlink..."
    rm -rf "$AWS_V2_DIR/current"
    (cd "$AWS_V2_DIR" && ln -s "$AWS_CLI_VERSION" current)
fi

# Use fpm to build the RPM.
# The -C option tells fpm to change to the staging directory and package its contents.
echo "Building RPM package..."
fpm -s dir -t rpm -n "$PKG_NAME" -v "$AWS_CLI_VERSION" -C "$PKG_ROOT" .
echo "RPM package built successfully."
# Optional: clean up the staging directory.
rm -rf "$PKG_ROOT"
EOF

respec retestit <<EOF
#!/bin/bash
set -euo pipefail

rpm --test -ivh ./RPMS/${arch}/${name}-${version}-${release}.${distro}.${arch}.rpm
rpm -ivh ./RPMS/${arch}/${name}-${version}-${release}.${distro}.${arch}.rpm
aws --version
EOF
