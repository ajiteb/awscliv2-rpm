name: Check for new installer
on:
  workflow_dispatch: {}
  push:
    branches: [ master ]
  # schedule:
  #   - cron: "15 18 * * *"
jobs:
  check_for_new_installer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check for new installer
      run: |
        git rm -q -f --ignore-unmatch -- *.version
        bash -x check_for_new_installer | xargs --no-run-if-empty git add
    - name: Rebuild spec file, etc.
      run: ./respecit | xargs --no-run-if-empty git add
    - name: Check for changes to commit
      id: changes
      continue-on-error: true
      run: git diff --cached --name-status --exit-code
    - name: Push updated installer details
      if: steps.changes.outcome == 'failure'
      id: commit
      shell: bash
      run: |
        version=$(cat aws-cli.version)
        branch=update-to-$version
        git config user.name "$GITHUB_ACTOR"
        git config user.email "${GITHUB_REPOSITORY//\//+}+${GITHUB_WORKFLOW// /-}@github.io"
        git commit --file aws-cli.version
        git checkout -b $branch
        git push origin $branch
        echo "::set-output name=version::$version"
        echo "::set-output name=branch::$branch"
    - name: Create pull request
      uses: actions/github-script@v3
      if: steps.changes.outcome == 'failure'
      with:
        script: |
          github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "update to ${{ steps.commit.outputs.version }}",
            head: "${{ steps.commit.outputs.branch }}",
            base: "main",
          });
